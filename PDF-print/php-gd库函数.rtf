{\rtf1\ansi\ansicpg936\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red249\green249\blue249;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10500\viewh9000\viewkind0
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\b\fs28 \cf0 gd
\f1 \'bf\'e2\'ba\'af\'ca\'fd\

\f0 \
\pard\pardeftab720\ql\qnatural

\b0 \cf0 \cb2 GetImageSize \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'cd\'bc\'c6\'ac\'b5\'c4\'b4\'f3\'d0\'a1
\f0 [
\f1 \'bc\'b4\'b3\'a4\'d3\'eb\'bf\'ed
\f0 ] \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 array GetImageSize(string filename, array [imageinfo]); \
\
ImageArc \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'ad\'bb\'a1\'cf\'df
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageArc(int im, int cx, int cy, int w, int h, int s, int e, int col); \
\
ImageChar \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d0\'b4\'b3\'f6\'ba\'e1\'cf\'f2\'d7\'d6\'b7\'fb
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageChar(int im, int font, int x, int y, string c, int col); \
\
ImageCharUp \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d0\'b4\'b3\'f6\'ca\'fa\'ca\'bd\'d7\'d6\'b7\'fb
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageCharup(int im, int font, int x, int y, string c, int col); \
\
ImageColorAllocate \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c6\'a5\'c5\'e4\'d1\'d5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorAllocate(int im, int red, int green, int blue); \
\
ImageColorTransparent \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d6\'b8\'b6\'a8\'cd\'b8\'c3\'f7\'b1\'b3\'be\'b0\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorTransparent(int im, int [col]); \
\
ImageCopyResized \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'b8\'b4\'d6\'c6\'d0\'c2\'cd\'bc\'b2\'a2\'b5\'f7\'d5\'fb\'b4\'f3\'d0\'a1
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageCopyResized(int dst_im, int src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH); \
\
ImageCreate \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bd\'a8\'c1\'a2\'d0\'c2\'cd\'bc
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageCreate(int x_size, int y_size); \
\
ImageDashedLine \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'d0\'e9\'cf\'df
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageDashedLine(int im, int x1, int y1, int x2, int y2, int col); \
\
ImageDestroy \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bd\'e1\'ca\'f8\'cd\'bc\'d0\'ce
\f0  \

\f1 \'d3\'c3\'b7\'a8\'bd\'e2\'ca\'cd\'a3\'ba
\f0 int ImageDestroy(int im); \
\
ImageFill \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'cd\'bc\'d0\'ce\'d7\'c5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageFill(int im, int x, int y, int col); \
\
ImageFilledPolygon\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'b6\'e0\'b1\'df\'d0\'ce\'c7\'f8\'d3\'f2\'d7\'c5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageFilledPolygon(int im, array points, int num_points, int col); \
\
ImageFilledRectangle\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'be\'d8\'d0\'ce\'c7\'f8\'d3\'f2\'d7\'c5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageFilledRectangle(int im, int x1, int y1, int x2, int y2, int col); \
\
ImageFillToBorder\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d6\'b8\'b6\'a8\'d1\'d5\'c9\'ab\'c7\'f8\'d3\'f2\'c4\'da\'d7\'c5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageFillToBorder(int im, int x, int y, int border, int col); \
\
ImageFontHeight \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'d7\'d6\'d0\'cd\'b5\'c4\'b8\'df\'b6\'c8
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageFontHeight(int font); \
\
ImageFontWidth\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'d7\'d6\'d0\'cd\'b5\'c4\'bf\'ed\'b6\'c8
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageFontWidth(int font); \
\
ImageInterlace\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'ca\'b9\'d3\'c3\'bd\'bb\'b4\'ed\'ca\'bd\'cf\'d4\'ca\'be\'d3\'eb\'b7\'f1
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageInterlace(int im, int [interlace]); \
\
ImageLine\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'ca\'b5\'cf\'df
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageLine(int im, int x1, int y1, int x2, int y2, int col); \
\
ImageLoadFont\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d4\'d8\'c8\'eb\'b5\'e3\'d5\'f3\'d7\'d6\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageLoadFont(string file); \
\
ImagePolygon\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'b6\'e0\'b1\'df\'d0\'ce
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImagePolygon(int im, array points, int num_points, int col); \
\
ImageRectangle\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'be\'d8\'d0\'ce
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageRectangle(int im, int x1, int y1, int x2, int y2, int col); \
\
ImageSetPixel\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'b5\'e3
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageSetPixel(int im, int x, int y, int col); \
\
ImageString \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'ba\'e1\'ca\'bd\'d7\'d6\'b7\'fb\'b4\'ae
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageString(int im, int font, int x, int y, string s, int col); \
\
ImageStringUp\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bb\'e6\'d6\'b1\'ca\'bd\'d7\'d6\'b7\'fb\'b4\'ae
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageStringUp(int im, int font, int x, int y, string s, int col); \
\
ImageSX \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'cd\'bc\'c6\'ac\'b5\'c4\'bf\'ed\'b6\'c8
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageSX(int im); \
\
ImageSY \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'cd\'bc\'c6\'ac\'b5\'c4\'b8\'df\'b6\'c8
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageSY(int im); \
\
ImageTTFBBox \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bc\'c6\'cb\'e3
\f0  TTF 
\f1 \'ce\'c4\'d7\'d6\'cb\'f9\'d5\'bc\'c7\'f8\'d3\'f2
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 array ImageTTFBBox(int size, int angle, string fontfile, string text); \
\
ImageTTFText\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d0\'b4
\f0  TTF 
\f1 \'ce\'c4\'d7\'d6\'b5\'bd\'cd\'bc\'d6\'d0
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 array ImageTTFText(int im, int size, int angle, int x, int y, int col, string fontfile, string text); \
\
ImageColorAt \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'cd\'bc\'d6\'d0\'d6\'b8\'b6\'a8\'b5\'e3\'d1\'d5\'c9\'ab\'b5\'c4\'cb\'f7\'d2\'fd\'d6\'b5
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorAt(int im, int x, int y); \
\
ImageColorClosest \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bc\'c6\'cb\'e3\'c9\'ab\'b1\'ed\'d6\'d0\'d3\'eb\'d6\'b8\'b6\'a8\'d1\'d5\'c9\'ab\'d7\'ee\'bd\'d3\'bd\'fc\'d5\'df
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorClosest(int im, int red, int green, int blue); \
\
ImageColorExact \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bc\'c6\'cb\'e3\'c9\'ab\'b1\'ed\'c9\'cf\'d6\'b8\'b6\'a8\'d1\'d5\'c9\'ab\'cb\'f7\'d2\'fd\'d6\'b5
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorExact(int im, int red, int green, int blue); \
\
ImageColorResolve \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bc\'c6\'cb\'e3\'c9\'ab\'b1\'ed\'c9\'cf\'d6\'b8\'b6\'a8\'bb\'f2\'d7\'ee\'bd\'d3\'bd\'fc\'d1\'d5\'c9\'ab\'b5\'c4\'cb\'f7\'d2\'fd\'d6\'b5
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorResolve(int im, int red, int green, int blue); \
\
ImageColorSet \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c9\'e8\'b6\'a8\'c9\'ab\'b1\'ed\'c9\'cf\'d6\'b8\'b6\'a8\'cb\'f7\'d2\'fd\'b5\'c4\'d1\'d5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 boolean ImageColorSet(int im, int index, int red, int green, int blue); \
\
ImageColorsForIndex \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b5\'c3\'c9\'ab\'b1\'ed\'c9\'cf\'d6\'b8\'b6\'a8\'cb\'f7\'d2\'fd\'b5\'c4\'d1\'d5\'c9\'ab
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 array ImageColorsForIndex(int im, int index); \
\
ImageColorsTotal \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bc\'c6\'cb\'e3\'cd\'bc\'b5\'c4\'d1\'d5\'c9\'ab\'ca\'fd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageColorsTotal(int im); \
\
ImagePSLoadFont \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d4\'d8\'c8\'eb
\f0  PostScript 
\f1 \'d7\'d6\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImagePSLoadFont(string filename); \
\
ImagePSFreeFont \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d0\'b6\'cf\'c2
\f0  PostScript 
\f1 \'d7\'d6\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 void ImagePSFreeFont(int fontindex); \
\
ImagePSEncodeFont \

\f1 \'d7\'f7\'d3\'c3\'a3\'ba
\f0 PostScript 
\f1 \'d7\'d6\'d0\'cd\'d7\'aa\'b3\'c9\'cf\'f2\'c1\'bf\'d7\'d6
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImagePSEncodeFont(string encodingfile); \
\
ImagePSText\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'d0\'b4
\f0  PostScript 
\f1 \'ce\'c4\'d7\'d6\'b5\'bd\'cd\'bc\'d6\'d0
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 array ImagePSText(int image, string text, int font, int size, int foreground, int background, int x, int y, int space, int tightness, float angle, int antialias_steps); \
\
ImagePSBBox\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bc\'c6\'cb\'e3
\f0  PostScript 
\f1 \'ce\'c4\'d7\'d6\'cb\'f9\'d5\'bc\'c7\'f8\'d3\'f2
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0  array ImagePSBBox(string text, int font, int size, int space, int width, float angle); \
\
ImageCreateFromPNG\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b3\'f6
\f0  PNG 
\f1 \'cd\'bc\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageCreateFromPng(string filename); \
\
ImagePNG\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bd\'a8\'c1\'a2
\f0  PNG 
\f1 \'cd\'bc\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImagePng(int im, string [filename]); \
\
ImageCreateFromGIF\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'c8\'a1\'b3\'f6
\f0  GIF 
\f1 \'cd\'bc\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageCreateFromGif(string filename); \
\
ImageGIF\

\f1 \'d7\'f7\'d3\'c3\'a3\'ba\'bd\'a8\'c1\'a2
\f0  GIF 
\f1 \'cd\'bc\'d0\'cd
\f0  \

\f1 \'d3\'c3\'b7\'a8\'a3\'ba
\f0 int ImageGif(int im, string [filename]); \
}